Common CTE SQL queries

EXPLANATION :For the first CTE I added the WITH and named it total_amount_paid_cte inside the () are the columns listed inside the subquery which will be now in the cte.
For the second query I did the same but added the outer query at the end and renamed alias columns AS top_customer_count_cte. 
Step1: 
WITH total_amount_paid_cte (customer_id, first_name,
last_name, city, country,
total_amount_paid) AS (SELECT A.customer_id, A.first_name, A.last_name,
C.city,
D.country,
Sum(E.amount) AS total_amount_paid
From customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
INNER JOIN payment E ON A.customer_id = E.customer_id
WHERE C.city IN ('Aurora', 'So Leopoldo', 'Tianjin', 'Shanwei', 'Citrus Heights', 'Teboksary', 'Iwaki', 'Ambattur', 'Cianjur', 'Acua')
GROUP BY A.customer_id,
A.first_name,
A.last_name,
C.city,
D.country
ORDER BY total_amount_paid DESC
LIMIT 5)
SELECT AVG(total_amount_paid)
FROM total_amount_paid_cte

Step2: 
WITH top_customer_count_cte (customer_id, first_name, last_name,
city, country, total_amount_paid) AS
(SELECT A.customer_id, A.first_name, A.last_name,
cty.city,
cnty.country,
Sum(paym.amount) AS total_amount_paid
From customer A
INNER JOIN address AS addr ON A.address_id = addr.address_id
INNER JOIN city AS cty ON addr.city_id = cty.city_id
INNER JOIN country AS cnty ON cty.country_id = cnty.country_id
INNER JOIN payment AS paym ON A.customer_id = paym.customer_id
WHERE cty.city IN ('Aurora', 'So Leopoldo', 'Tianjin', 'Shanwei', 'Citrus Heights',
'Teboksary', 'Iwaki', 'Ambattur', 'Cianjur', 'Acua')
GROUP BY A.customer_id,
A.first_name,
A.last_name,
cty.city,
cnty.country
ORDER BY total_amount_paid DESC
LIMIT 5)
SELECT D.country,
COUNT(DISTINCT A.customer_id) AS all_customer_count,
COUNT(top_customer_count_cte) AS top_customer_count
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
LEFT JOIN top_customer_count_cte ON A.customer_id = top_customer_count_cte.customer_id GROUP BY D.country
ORDER BY all_customer_count DESC;

